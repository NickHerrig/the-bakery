---
- name: create device configuration directory
  delegate_to: localhost
  file:
    path: "{{ nebula_device_config_dir }}"
    state: directory

- name: copy nebula node-config.yml file to servers
  template:
    src: node-config.yml.j2
    dest: "{{ nebula_config_dir }}/config.yml"
    owner: nebula
    group: nebula
    mode: 0644
  become_user: root
  become: true
  notify:
    - restart nebula

- name: create nebula config.yml for devices
  template:
    src: device-config.yml.j2
    dest: "{{ nebula_device_config_dir }}/{{ item.nebula_hostname }}.yml"
  delegate_to: localhost
  run_once: true
  with_items: "{{ nebula_client_devices }}"

- name: create nebula systemd service unit
  template:
    src: nebula.service.j2
    dest: /etc/systemd/system/nebula.service
    owner: root
    group: root
    mode: 0644
  become_user: root
  become: true
  notify:
    - restart nebula

- name: ensure nebula service is started and enabled
  systemd:
    daemon_reload: true
    name: nebula
    enabled: true
  become_user: root
  become: true

- name: open nebula dns port on ufw for lighthouse 
  ufw:
    rule: allow
    port: "53"
  become: true
  become_user: root
  when: nebula_is_lighthouse

- name: open nebula dns port on ufw for lighthouse 
  ufw:
    rule: allow
    port: "{{ nebula_lighthouse_port }}"
  become: true
  become_user: root
  when: nebula_is_lighthouse

- name: Set UFW allow all traffic on nebual1 interface
  ufw:
    rule: allow
    direction: in
    interface: nebula1
  become: true
  become_user: root

- name: Install dns system dependencies
  apt:
    name: resolvconf
    state: present
    update_cache: true
  retries: 5
  delay: 2
  become_user: root
  become: true

- name: copy dns config
  template:
    src: "dns_conf.j2"
    dest: "/etc/resolvconf/resolv.conf.d/head"
    mode: "0644"
  become: true
  become_user: root
  notify:
    - restart resolvconf

- name: ensure resolvconf service is started and enabled
  systemd:
    daemon_reload: true
    name: resolvconf
    state: started
    enabled: true
  become_user: root
  become: true
